name: CLI Argument Validation Tests

on:
  # Run arg validation for pushed to main and for all PRs
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  test-cli-errors:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Build CLI
        run: GOOS=linux GOARCH=amd64 go build -o godot-vrt

      - name: Create test script
        run: |
          cat > test-cli-errors.sh << 'EOL'
          #!/bin/bash
          set -e
          
          # Color codes for output
          GREEN='\033[0;32m'
          RED='\033[0;31m'
          NC='\033[0m' # No Color
          
          failed_tests=0
          total_tests=0
          
          run_test() {
            local test_name="$1"
            local command="$2"
            local expected_error="$3"
          
            echo "Running test: $test_name"
            echo "Command: $command"
            echo "Expected error: $expected_error"
          
            total_tests=$((total_tests + 1))
          
            # Run the command and capture output and exit code
            output=$(eval "$command" 2>&1 || true)
            exit_code=$?
          
            echo "Output: $output"
            echo "Exit code: $exit_code"
          
            # Check if command failed (as expected)
            if [ $exit_code -eq 0 ]; then
              echo -e "${RED}✗ Test failed: Command did not return an error${NC}"
              failed_tests=$((failed_tests + 1))
              return
            fi
          
            # Check if the output contains the expected error message
            if echo "$output" | grep -q "$expected_error"; then
              echo -e "${GREEN}✓ Test passed: Found expected error message${NC}"
            else
              echo -e "${RED}✗ Test failed: Expected error message not found${NC}"
              failed_tests=$((failed_tests + 1))
            fi
          
            echo "----------------------------------------"
          }
          
          # Add your test cases here
          run_test "Invalid flag value" "./godot-vrt --flags -1" "invalid value for --flags"
          run_test "Unknown flag" "./godot-vrt --unknown-flag" "unknown flag: --unknown-flag"
          run_test "Missing required argument" "./godot-vrt --required-arg" "flag requires an argument: --required-arg"
          # Add more test cases as needed
          
          echo "Test summary: $((total_tests - failed_tests))/$total_tests tests passed"
          
          if [ $failed_tests -gt 0 ]; then
            echo -e "${RED}$failed_tests tests failed${NC}"
            exit 1
          else
            echo -e "${GREEN}All tests passed!${NC}"
          fi
          EOL
          
          chmod +x test-cli-errors.sh

      - name: Run error tests
        run: ./test-cli-errors.sh
